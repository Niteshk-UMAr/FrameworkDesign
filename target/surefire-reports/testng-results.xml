<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-09T06:43:44 IST" name="Suite" finished-at="2024-07-09T06:44:47 IST" duration-ms="63053">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.LoginErrorValidation()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" name="LoginErrorValidation" class="Framework.Tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" name="submitOrder" class="Framework.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-07-09T06:43:44 IST" name="ErrorValidationsTest" finished-at="2024-07-09T06:44:35 IST" duration-ms="50406">
      <class name="Framework.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" started-at="2024-07-09T06:43:44 IST" name="launchApplication" finished-at="2024-07-09T06:43:57 IST" duration-ms="12219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" started-at="2024-07-09T06:43:57 IST" name="LoginErrorValidation" finished-at="2024-07-09T06:43:58 IST" duration-ms="1000" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at Framework.Tests.ErrorValidationsTest.LoginErrorValidation(ErrorValidationsTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" started-at="2024-07-09T06:43:58 IST" name="tearDown" finished-at="2024-07-09T06:43:58 IST" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" started-at="2024-07-09T06:43:58 IST" name="launchApplication" finished-at="2024-07-09T06:44:02 IST" duration-ms="4132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" started-at="2024-07-09T06:44:02 IST" name="LoginErrorValidation" finished-at="2024-07-09T06:44:02 IST" duration-ms="657" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at Framework.Tests.ErrorValidationsTest.LoginErrorValidation(ErrorValidationsTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:249)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:829)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" started-at="2024-07-09T06:44:03 IST" name="tearDown" finished-at="2024-07-09T06:44:03 IST" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" started-at="2024-07-09T06:44:03 IST" name="launchApplication" finished-at="2024-07-09T06:44:08 IST" duration-ms="4302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" started-at="2024-07-09T06:44:08 IST" name="ProductErrorValidation" finished-at="2024-07-09T06:44:35 IST" duration-ms="26965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.Tests.ErrorValidationsTest@33308786]" started-at="2024-07-09T06:44:35 IST" name="tearDown" finished-at="2024-07-09T06:44:35 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Framework.Tests.ErrorValidationsTest -->
    </test> <!-- ErrorValidationsTest -->
    <test started-at="2024-07-09T06:43:44 IST" name="SubmitOrderTest" finished-at="2024-07-09T06:44:47 IST" duration-ms="63053">
      <class name="Framework.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" started-at="2024-07-09T06:43:45 IST" name="launchApplication" finished-at="2024-07-09T06:43:57 IST" duration-ms="11818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" started-at="2024-07-09T06:43:57 IST" name="submitOrder" data-provider="getData" finished-at="2024-07-09T06:44:23 IST" duration-ms="26242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Test@123, product=ZARA COAT 3, email=abdeveliers@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" started-at="2024-07-09T06:44:23 IST" name="tearDown" finished-at="2024-07-09T06:44:23 IST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" started-at="2024-07-09T06:44:23 IST" name="launchApplication" finished-at="2024-07-09T06:44:27 IST" duration-ms="4372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" started-at="2024-07-09T06:44:27 IST" name="submitOrder" data-provider="getData" finished-at="2024-07-09T06:44:42 IST" duration-ms="14748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Test@123, product=ADIDAS ORIGINAL, email=msdhoni@yopmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" started-at="2024-07-09T06:44:42 IST" name="tearDown" finished-at="2024-07-09T06:44:42 IST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" started-at="2024-07-09T06:44:42 IST" name="launchApplication" finished-at="2024-07-09T06:44:46 IST" duration-ms="3950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" started-at="2024-07-09T06:44:46 IST" name="OrderHistoryTest" finished-at="2024-07-09T06:44:47 IST" depends-on-methods="Framework.Tests.SubmitOrderTest.submitOrder" duration-ms="1142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Framework.Tests.SubmitOrderTest@61544ae6]" started-at="2024-07-09T06:44:47 IST" name="tearDown" finished-at="2024-07-09T06:44:47 IST" duration-ms="80" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Framework.Tests.SubmitOrderTest -->
    </test> <!-- SubmitOrderTest -->
  </suite> <!-- Suite -->
</testng-results>
